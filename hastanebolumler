package test;

import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import test.Database;
import test.hastalogin;
import test.login;
import test.sekreterlogin;

public class hastane_bolumler extends javax.swing.JFrame {

    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    public hastane_bolumler() {
        initComponents();

        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        this.setSize(1125, 800);
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);

        conn = Database.java_db();

        currentDate();
    }

    public void currentDate() {
        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);

        date.setText((month + 1) + "/" + (day) + "/" + (year));

        int second = cal.get(Calendar.SECOND);
        int minute = cal.get(Calendar.MINUTE);
        int hour = cal.get(Calendar.HOUR);

        time.setText((hour) + ":" + (minute) + ":" + (second));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        cb_bolum = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        doktorarea = new javax.swing.JTextArea();
        temizle = new javax.swing.JButton();
        geri = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        date = new javax.swing.JMenu();
        time = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        cb_bolum.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        cb_bolum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bölüm seçiniz", "Beyin ve sinir cerrahisi", "Kardiyoloji", "Nöroloji", "Psikoloji", "Üroloji", "Ağız ve diş sağlığı", "Cildiye", "Plastik cerrahi", "Genel cerrahi", "Göz hastalıkları", "Kulak burun boğaz", "İç hastalıkları", "Kadın doğum" }));
        getContentPane().add(cb_bolum);
        cb_bolum.setBounds(70, 50, 180, 40);

        jButton1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton1.setText("Ara");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(300, 50, 100, 40);

        doktorarea.setEditable(false);
        doktorarea.setColumns(20);
        doktorarea.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        doktorarea.setRows(5);
        doktorarea.setText("                                  Mehmet Akif Ersoy Üniversite Hastanesi");
        getContentPane().add(doktorarea);
        doktorarea.setBounds(440, 30, 590, 660);

        temizle.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        temizle.setText("Temizle");
        temizle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temizleActionPerformed(evt);
            }
        });
        getContentPane().add(temizle);
        temizle.setBounds(300, 120, 100, 40);

        geri.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        geri.setText("Geri");
        geri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geriActionPerformed(evt);
            }
        });
        getContentPane().add(geri);
        geri.setBounds(300, 620, 100, 50);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/test/images/background1.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1180, 750);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        date.setText("date");
        jMenuBar1.add(date);

        time.setText("time");
        jMenuBar1.add(time);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         

        String a1 = cb_bolum.getSelectedItem().toString();

        //1
        if (a1.equals("Beyin ve sinir cerrahisi")) {
            try {
                doktorarea.append("\n \n Beyin ve sinir cerrahisi");
                String sql = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'E'";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "1");

                rs = pst.executeQuery();

                String ad1 = rs.getString("doktorad");
                String ad2 = rs.getString("doktorsoyad");
                String ad4 = rs.getString("doktoremail");
                String ad5 = rs.getString("doktortelefon");

                doktorarea.append(" \n \n"
                        + "Doktor adı: " + ad1 + "\n"
                        + "Doktor soyadı: " + ad2 + "\n"
                        + "Doktor email: " + ad4 + "\n"
                        + "Doktor tel: " + ad5 + "\n"
                );

                String sql1 = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'K' ";

                pst = conn.prepareStatement(sql1);
                pst.setString(1, "1");
                rs = pst.executeQuery();

                String ad6 = rs.getString("doktorad");
                String ad7 = rs.getString("doktorsoyad");
                String ad8 = rs.getString("doktoremail");
                String ad9 = rs.getString("doktortelefon");

                doktorarea.append("\n -------------------------- \n \n"
                        + "Doktor adı: " + ad6 + "\n"
                        + "Doktor soyadı: " + ad7 + "\n"
                        + "Doktor email: " + ad8 + "\n"
                        + "Doktor tel: " + ad9 + "\n"
                );

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Kayıt bulunamadı. ");
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch (Exception ex) {

                }
            }
        }
        //2
        if (a1.equals("Kardiyoloji")) {
            try {
                doktorarea.append("\n \n Kardiyoloji");
                String sql = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'E'";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "2");
                rs = pst.executeQuery();

                String ad1 = rs.getString("doktorad");
                String ad2 = rs.getString("doktorsoyad");
                String ad4 = rs.getString("doktoremail");
                String ad5 = rs.getString("doktortelefon");

                doktorarea.append(" \n \n"
                        + "Doktor adı: " + ad1 + "\n"
                        + "Doktor soyadı: " + ad2 + "\n"
                        + "Doktor email: " + ad4 + "\n"
                        + "Doktor tel: " + ad5 + "\n"
                );

                String sql1 = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'K' ";

                pst = conn.prepareStatement(sql1);
                pst.setString(1, "2");
                rs = pst.executeQuery();

                String ad6 = rs.getString("doktorad");
                String ad7 = rs.getString("doktorsoyad");
                String ad8 = rs.getString("doktoremail");
                String ad9 = rs.getString("doktortelefon");

                doktorarea.append("\n -------------------------- \n \n"
                        + "Doktor adı: " + ad6 + "\n"
                        + "Doktor soyadı: " + ad7 + "\n"
                        + "Doktor email: " + ad8 + "\n"
                        + "Doktor tel: " + ad9 + "\n"
                );

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Kayıt bulunamadı. ");
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch (Exception ex) {

                }
            }
        }
        //3
        if (a1.equals("Nöroloji")) {
            try {
                doktorarea.append("\n \n Nöroloji");
                String sql = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'E'";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "3");
                rs = pst.executeQuery();

                String ad1 = rs.getString("doktorad");
                String ad2 = rs.getString("doktorsoyad");
                String ad4 = rs.getString("doktoremail");
                String ad5 = rs.getString("doktortelefon");

                doktorarea.append(" \n \n"
                        + "Doktor adı: " + ad1 + "\n"
                        + "Doktor soyadı: " + ad2 + "\n"
                        + "Doktor email: " + ad4 + "\n"
                        + "Doktor tel: " + ad5 + "\n"
                );

                String sql1 = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'K' ";

                pst = conn.prepareStatement(sql1);
                pst.setString(1, "3");
                rs = pst.executeQuery();

                String ad6 = rs.getString("doktorad");
                String ad7 = rs.getString("doktorsoyad");
                String ad8 = rs.getString("doktoremail");
                String ad9 = rs.getString("doktortelefon");

                doktorarea.append("\n -------------------------- \n \n"
                        + "Doktor adı: " + ad6 + "\n"
                        + "Doktor soyadı: " + ad7 + "\n"
                        + "Doktor email: " + ad8 + "\n"
                        + "Doktor tel: " + ad9 + "\n"
                );

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Kayıt bulunamadı. ");
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch (Exception ex) {

                }
            }
        }
        //4
        if (a1.equals("Psikoloji")) {
            try {
                doktorarea.append("\n \n Psikoloji");
                String sql = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'E'";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "4");
                rs = pst.executeQuery();

                String ad1 = rs.getString("doktorad");
                String ad2 = rs.getString("doktorsoyad");
                String ad4 = rs.getString("doktoremail");
                String ad5 = rs.getString("doktortelefon");

                doktorarea.append(" \n \n"
                        + "Doktor adı: " + ad1 + "\n"
                        + "Doktor soyadı: " + ad2 + "\n"
                        + "Doktor email: " + ad4 + "\n"
                        + "Doktor tel: " + ad5 + "\n"
                );

                String sql1 = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'K' ";

                pst = conn.prepareStatement(sql1);
                pst.setString(1, "4");
                rs = pst.executeQuery();

                String ad6 = rs.getString("doktorad");
                String ad7 = rs.getString("doktorsoyad");
                String ad8 = rs.getString("doktoremail");
                String ad9 = rs.getString("doktortelefon");

                doktorarea.append("\n -------------------------- \n \n"
                        + "Doktor adı: " + ad6 + "\n"
                        + "Doktor soyadı: " + ad7 + "\n"
                        + "Doktor email: " + ad8 + "\n"
                        + "Doktor tel: " + ad9 + "\n"
                );

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Kayıt bulunamadı. ");
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch (Exception ex) {

                }
            }
        }
        //5
        if (a1.equals("Üroloji")) {
            try {
                doktorarea.append("\n \n Üroloji");
                String sql = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'E'";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "5");
                rs = pst.executeQuery();

                String ad1 = rs.getString("doktorad");
                String ad2 = rs.getString("doktorsoyad");
                String ad4 = rs.getString("doktoremail");
                String ad5 = rs.getString("doktortelefon");

                doktorarea.append(" \n \n"
                        + "Doktor adı: " + ad1 + "\n"
                        + "Doktor soyadı: " + ad2 + "\n"
                        + "Doktor email: " + ad4 + "\n"
                        + "Doktor tel: " + ad5 + "\n"
                );

                String sql1 = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'K' ";

                pst = conn.prepareStatement(sql1);
                pst.setString(1, "5");
                rs = pst.executeQuery();

                String ad6 = rs.getString("doktorad");
                String ad7 = rs.getString("doktorsoyad");
                String ad8 = rs.getString("doktoremail");
                String ad9 = rs.getString("doktortelefon");

                doktorarea.append("\n -------------------------- \n \n"
                        + "Doktor adı: " + ad6 + "\n"
                        + "Doktor soyadı: " + ad7 + "\n"
                        + "Doktor email: " + ad8 + "\n"
                        + "Doktor tel: " + ad9 + "\n"
                );

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Kayıt bulunamadı. ");
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch (Exception ex) {

                }
            }
        }
        //6
        if (a1.equals("Ağız ve diş sağlığı")) {
            try {
                doktorarea.append("\n \n Ağız ve diş sağlığı");
                String sql = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'E'";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "6");
                rs = pst.executeQuery();

                String ad1 = rs.getString("doktorad");
                String ad2 = rs.getString("doktorsoyad");
                String ad4 = rs.getString("doktoremail");
                String ad5 = rs.getString("doktortelefon");

                doktorarea.append(" \n \n"
                        + "Doktor adı: " + ad1 + "\n"
                        + "Doktor soyadı: " + ad2 + "\n"
                        + "Doktor email: " + ad4 + "\n"
                        + "Doktor tel: " + ad5 + "\n"
                );

                String sql1 = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'K' ";

                pst = conn.prepareStatement(sql1);
                pst.setString(1, "6");
                rs = pst.executeQuery();

                String ad6 = rs.getString("doktorad");
                String ad7 = rs.getString("doktorsoyad");
                String ad8 = rs.getString("doktoremail");
                String ad9 = rs.getString("doktortelefon");

                doktorarea.append("\n -------------------------- \n \n"
                        + "Doktor adı: " + ad6 + "\n"
                        + "Doktor soyadı: " + ad7 + "\n"
                        + "Doktor email: " + ad8 + "\n"
                        + "Doktor tel: " + ad9 + "\n"
                );

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Kayıt bulunamadı. ");
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch (Exception ex) {

                }
            }
        }
        //7
        if (a1.equals("Cildiye")) {
            try {
                doktorarea.append("\n \n Cildiye");
                String sql = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'E'";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "7");
                rs = pst.executeQuery();

                String ad1 = rs.getString("doktorad");
                String ad2 = rs.getString("doktorsoyad");
                String ad4 = rs.getString("doktoremail");
                String ad5 = rs.getString("doktortelefon");

                doktorarea.append(" \n \n"
                        + "Doktor adı: " + ad1 + "\n"
                        + "Doktor soyadı: " + ad2 + "\n"
                        + "Doktor email: " + ad4 + "\n"
                        + "Doktor tel: " + ad5 + "\n"
                );

                String sql1 = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'K' ";

                pst = conn.prepareStatement(sql1);
                pst.setString(1, "7");
                rs = pst.executeQuery();

                String ad6 = rs.getString("doktorad");
                String ad7 = rs.getString("doktorsoyad");
                String ad8 = rs.getString("doktoremail");
                String ad9 = rs.getString("doktortelefon");

                doktorarea.append("\n -------------------------- \n \n"
                        + "Doktor adı: " + ad6 + "\n"
                        + "Doktor soyadı: " + ad7 + "\n"
                        + "Doktor email: " + ad8 + "\n"
                        + "Doktor tel: " + ad9 + "\n"
                );

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Kayıt bulunamadı. ");
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch (Exception ex) {

                }
            }
        }
        //8
        if (a1.equals("Plastik cerrahi")) {
            try {
                doktorarea.append("\n \n Plastik cerrahi");
                String sql = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'E'";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "8");
                rs = pst.executeQuery();

                String ad1 = rs.getString("doktorad");
                String ad2 = rs.getString("doktorsoyad");
                String ad4 = rs.getString("doktoremail");
                String ad5 = rs.getString("doktortelefon");

                doktorarea.append(" \n \n"
                        + "Doktor adı: " + ad1 + "\n"
                        + "Doktor soyadı: " + ad2 + "\n"
                        + "Doktor email: " + ad4 + "\n"
                        + "Doktor tel: " + ad5 + "\n"
                );

                String sql1 = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'K' ";

                pst = conn.prepareStatement(sql1);
                pst.setString(1, "8");
                rs = pst.executeQuery();

                String ad6 = rs.getString("doktorad");
                String ad7 = rs.getString("doktorsoyad");
                String ad8 = rs.getString("doktoremail");
                String ad9 = rs.getString("doktortelefon");

                doktorarea.append("\n -------------------------- \n \n"
                        + "Doktor adı: " + ad6 + "\n"
                        + "Doktor soyadı: " + ad7 + "\n"
                        + "Doktor email: " + ad8 + "\n"
                        + "Doktor tel: " + ad9 + "\n"
                );

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Kayıt bulunamadı. ");
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch (Exception ex) {

                }
            }
        }
        //9
        if (a1.equals("Genel cerrahi")) {
            try {
                doktorarea.append("\n \n Genel cerrahi");
                String sql = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'E'";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "9");
                rs = pst.executeQuery();

                String ad1 = rs.getString("doktorad");
                String ad2 = rs.getString("doktorsoyad");
                String ad4 = rs.getString("doktoremail");
                String ad5 = rs.getString("doktortelefon");

                doktorarea.append(" \n \n"
                        + "Doktor adı: " + ad1 + "\n"
                        + "Doktor soyadı: " + ad2 + "\n"
                        + "Doktor email: " + ad4 + "\n"
                        + "Doktor tel: " + ad5 + "\n"
                );

                String sql1 = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'K' ";

                pst = conn.prepareStatement(sql1);
                pst.setString(1, "9");
                rs = pst.executeQuery();

                String ad6 = rs.getString("doktorad");
                String ad7 = rs.getString("doktorsoyad");
                String ad8 = rs.getString("doktoremail");
                String ad9 = rs.getString("doktortelefon");

                doktorarea.append("\n -------------------------- \n \n"
                        + "Doktor adı: " + ad6 + "\n"
                        + "Doktor soyadı: " + ad7 + "\n"
                        + "Doktor email: " + ad8 + "\n"
                        + "Doktor tel: " + ad9 + "\n"
                );

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Kayıt bulunamadı. ");
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch (Exception ex) {

                }
            }
        }
        //10
        if (a1.equals("Göz hastalıkları")) {
            try {
                doktorarea.append("\n \n Göz hastalıkları");
                String sql = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'E'";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "10");
                rs = pst.executeQuery();

                String ad1 = rs.getString("doktorad");
                String ad2 = rs.getString("doktorsoyad");
                String ad4 = rs.getString("doktoremail");
                String ad5 = rs.getString("doktortelefon");

                doktorarea.append(" \n \n"
                        + "Doktor adı: " + ad1 + "\n"
                        + "Doktor soyadı: " + ad2 + "\n"
                        + "Doktor email: " + ad4 + "\n"
                        + "Doktor tel: " + ad5 + "\n"
                );

                String sql1 = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'K' ";

                pst = conn.prepareStatement(sql1);
                pst.setString(1, "10");
                rs = pst.executeQuery();

                String ad6 = rs.getString("doktorad");
                String ad7 = rs.getString("doktorsoyad");
                String ad8 = rs.getString("doktoremail");
                String ad9 = rs.getString("doktortelefon");

                doktorarea.append("\n -------------------------- \n \n"
                        + "Doktor adı: " + ad6 + "\n"
                        + "Doktor soyadı: " + ad7 + "\n"
                        + "Doktor email: " + ad8 + "\n"
                        + "Doktor tel: " + ad9 + "\n"
                );

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Kayıt bulunamadı. ");
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch (Exception ex) {

                }
            }
        }
        //11
        if (a1.equals("Kulak burun boğaz")) {
            try {
                doktorarea.append("\n \n Kulak burun boğaz");
                String sql = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'E'";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "11");
                rs = pst.executeQuery();

                String ad1 = rs.getString("doktorad");
                String ad2 = rs.getString("doktorsoyad");
                String ad4 = rs.getString("doktoremail");
                String ad5 = rs.getString("doktortelefon");

                doktorarea.append(" \n \n"
                        + "Doktor adı: " + ad1 + "\n"
                        + "Doktor soyadı: " + ad2 + "\n"
                        + "Doktor email: " + ad4 + "\n"
                        + "Doktor tel: " + ad5 + "\n"
                );

                String sql1 = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'K' ";

                pst = conn.prepareStatement(sql1);
                pst.setString(1, "11");
                rs = pst.executeQuery();

                String ad6 = rs.getString("doktorad");
                String ad7 = rs.getString("doktorsoyad");
                String ad8 = rs.getString("doktoremail");
                String ad9 = rs.getString("doktortelefon");

                doktorarea.append("\n -------------------------- \n \n"
                        + "Doktor adı: " + ad6 + "\n"
                        + "Doktor soyadı: " + ad7 + "\n"
                        + "Doktor email: " + ad8 + "\n"
                        + "Doktor tel: " + ad9 + "\n"
                );

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Kayıt bulunamadı. ");
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch (Exception ex) {

                }
            }
        }
        //12
        if (a1.equals("İç hastalıkları")) {
            try {
                doktorarea.append("\n \n İç hastalıkları");
                String sql = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'E'";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "12");
                rs = pst.executeQuery();

                String ad1 = rs.getString("doktorad");
                String ad2 = rs.getString("doktorsoyad");
                String ad4 = rs.getString("doktoremail");
                String ad5 = rs.getString("doktortelefon");

                doktorarea.append(" \n \n"
                        + "Doktor adı: " + ad1 + "\n"
                        + "Doktor soyadı: " + ad2 + "\n"
                        + "Doktor email: " + ad4 + "\n"
                        + "Doktor tel: " + ad5 + "\n"
                );

                String sql1 = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'K' ";

                pst = conn.prepareStatement(sql1);
                pst.setString(1, "12");
                rs = pst.executeQuery();

                String ad6 = rs.getString("doktorad");
                String ad7 = rs.getString("doktorsoyad");
                String ad8 = rs.getString("doktoremail");
                String ad9 = rs.getString("doktortelefon");

                doktorarea.append("\n -------------------------- \n \n"
                        + "Doktor adı: " + ad6 + "\n"
                        + "Doktor soyadı: " + ad7 + "\n"
                        + "Doktor email: " + ad8 + "\n"
                        + "Doktor tel: " + ad9 + "\n"
                );

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Kayıt bulunamadı. ");
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch (Exception ex) {

                }
            }
        }
        //13
        if (a1.equals("Kadın doğum")) {
            try {
                doktorarea.append("\n \n Kadın doğum");
                String sql = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'E'";

                pst = conn.prepareStatement(sql);
                pst.setString(1, "13");
                rs = pst.executeQuery();

                String ad1 = rs.getString("doktorad");
                String ad2 = rs.getString("doktorsoyad");
                String ad4 = rs.getString("doktoremail");
                String ad5 = rs.getString("doktortelefon");

                doktorarea.append(" \n \n"
                        + "Doktor adı: " + ad1 + "\n"
                        + "Doktor soyadı: " + ad2 + "\n"
                        + "Doktor email: " + ad4 + "\n"
                        + "Doktor tel: " + ad5 + "\n"
                );

                String sql1 = "select * from Doktor where  bolum_id = ? AND cinsiyet = 'K' ";

                pst = conn.prepareStatement(sql1);
                pst.setString(1, "13");
                rs = pst.executeQuery();

                String ad6 = rs.getString("doktorad");
                String ad7 = rs.getString("doktorsoyad");
                String ad8 = rs.getString("doktoremail");
                String ad9 = rs.getString("doktortelefon");

                doktorarea.append("\n -------------------------- \n \n"
                        + "Doktor adı: " + ad6 + "\n"
                        + "Doktor soyadı: " + ad7 + "\n"
                        + "Doktor email: " + ad8 + "\n"
                        + "Doktor tel: " + ad9 + "\n"
                );

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Kayıt bulunamadı. ");
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch (Exception ex) {

                }
            }
        }

    }                                        

    private void temizleActionPerformed(java.awt.event.ActionEvent evt) {                                        

        cb_bolum.setSelectedIndex(0);
        doktorarea.setText("                                  Mehmet Akif Ersoy Üniversite Hastanesi");


    }                                       

    private void geriActionPerformed(java.awt.event.ActionEvent evt) {                                     
        this.setVisible(false);
        new menu().setVisible(true);
    }                                    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hastane_bolumler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hastane_bolumler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hastane_bolumler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hastane_bolumler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hastane_bolumler().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JComboBox<String> cb_bolum;
    private javax.swing.JMenu date;
    private javax.swing.JTextArea doktorarea;
    private javax.swing.JButton geri;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JButton temizle;
    private javax.swing.JMenu time;
    // End of variables declaration                   
}
